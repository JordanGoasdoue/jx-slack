// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/jenkins-x-labs/app-slack/pkg/apis/slack/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SlackBotLister helps list SlackBots.
type SlackBotLister interface {
	// List lists all SlackBots in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SlackBot, err error)
	// SlackBots returns an object that can list and get SlackBots.
	SlackBots(namespace string) SlackBotNamespaceLister
	SlackBotListerExpansion
}

// slackBotLister implements the SlackBotLister interface.
type slackBotLister struct {
	indexer cache.Indexer
}

// NewSlackBotLister returns a new SlackBotLister.
func NewSlackBotLister(indexer cache.Indexer) SlackBotLister {
	return &slackBotLister{indexer: indexer}
}

// List lists all SlackBots in the indexer.
func (s *slackBotLister) List(selector labels.Selector) (ret []*v1alpha1.SlackBot, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SlackBot))
	})
	return ret, err
}

// SlackBots returns an object that can list and get SlackBots.
func (s *slackBotLister) SlackBots(namespace string) SlackBotNamespaceLister {
	return slackBotNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SlackBotNamespaceLister helps list and get SlackBots.
type SlackBotNamespaceLister interface {
	// List lists all SlackBots in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SlackBot, err error)
	// Get retrieves the SlackBot from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SlackBot, error)
	SlackBotNamespaceListerExpansion
}

// slackBotNamespaceLister implements the SlackBotNamespaceLister
// interface.
type slackBotNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SlackBots in the indexer for a given namespace.
func (s slackBotNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SlackBot, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SlackBot))
	})
	return ret, err
}

// Get retrieves the SlackBot from the indexer for a given namespace and name.
func (s slackBotNamespaceLister) Get(name string) (*v1alpha1.SlackBot, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("slackbot"), name)
	}
	return obj.(*v1alpha1.SlackBot), nil
}
